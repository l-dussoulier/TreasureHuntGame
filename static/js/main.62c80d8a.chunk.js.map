{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","images/illustration.png","pages/mint.js","pages/elements/NftCard.js","pages/Galery.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","img","Mint","useDispatch","useSelector","useState","pendingNft","setpendingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MAX_MINT_AMOUNT","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","boxShadow","id","marginTop","marginBottom","textAlign","color","display","flexDirection","src","logo","alt","width","marginLeft","borderRadius","height","fontSize","fontWeight","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","marginRight","disabled","newMintAmount","lessMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","moreMintAmount","RenderNftCard","props","Card","border","Title","className","nft","name","Img","variant","Body","Text","description","attributes","map","attribute","Badge","bg","margin","trait_type","edition","tableNFts","ShowButon","Galery","setIndexNFT","IpfsBaseJson","IpfsBaseImg","ContractAddress","provider","ethers","providers","Web3Provider","signer","getSigner","contract","Contract","NFT","walletOfOwner","idNfts","forEach","tx","response","jsonData","NftCard","push","catch","this","ButtonDisplayNft","getInfoNFT","r","cursor","backgroundSize","backgroundPosition","minHeight","fontFamily","justifyContent","alignItems","CardGroup","paddingBottom","nftCard","Row","xs","md","App","Navbar","paddingTop","Brand","href","Toggle","Collapse","Nav","Link","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62c80d8a.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask \"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 94vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  color: #ffffff;\n  flex: ${({flex}) => (flex ? flex : 0)};\n  flex-direction: ${({fd}) => (fd ? fd : \"column\")};\n  justify-content: ${({jc}) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ai}) => (ai ? ai : \"flex-start\")};\n  background-color: ${({test}) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({image}) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: white;\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/illustration.a0e8af1b.png\";","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../redux/data/dataActions\";\nimport * as s from \"../styles/globalStyles\";\nimport styled from \"styled-components\";\nimport logo from \"../images/illustration.png\"\n\nconst truncate = (input, len) =>\n    input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: 1px solid var(--secondary-text);\n  background-color: var(--color-button);\n  padding: 10px;\n  font-weight: bold;\n  color: white;\n  width: 100px;\n  cursor: pointer;\n  \n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  \n  border: 1px solid var(--secondary-text);\n  background-color: var(--color-button);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var( --secondary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\n\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction Mint() {\n    const dispatch = useDispatch();\n    const blockchain = useSelector((state) => state.blockchain);\n    const data = useSelector((state) => state.data);\n    const [pendingNft, setpendingNft] = useState(false);\n    const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n    const [mintAmount, setMintAmount] = useState(1);\n    const [account, setAccount] = useState('');\n    const [CONFIG, SET_CONFIG] = useState({\n        CONTRACT_ADDRESS: \"\",\n        SCAN_LINK: \"\",\n        NETWORK: {\n            NAME: \"\",\n            SYMBOL: \"\",\n            ID: 0,\n        },\n        NFT_NAME: \"\",\n        SYMBOL: \"\",\n        MAX_SUPPLY: 1,\n        WEI_COST: 0,\n        DISPLAY_COST: 0,\n        GAS_LIMIT: 0,\n        MAX_MINT_AMOUNT: 1\n    });\n\n    const claimNFTs = () => {\n        let cost = CONFIG.WEI_COST;\n        let gasLimit = CONFIG.GAS_LIMIT;\n        let maxMintAmount = CONFIG.MAX_MINT_AMOUNT;\n        let totalCostWei = String(cost * mintAmount);\n        let totalGasLimit = String(gasLimit * mintAmount);\n        setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n        setpendingNft(true);\n        blockchain.smartContract.methods.mint(\"0x226667FD55BF1F59564C7fC1477b2ffc65aE2c87\",mintAmount)\n            .send({\n                gasLimit: String(totalGasLimit),\n                to: CONFIG.CONTRACT_ADDRESS,\n                from: blockchain.account,\n                value: totalCostWei,\n            })\n            .once(\"error\", (err) => {\n                console.log(err);\n                // function error mint\n                setFeedback(\"Sorry, something went wrong please try again later.\");\n                setpendingNft(false);\n            })\n            .then((receipt) => {\n                console.log(receipt);\n                // Function de success de mint\n                setFeedback(\n                    'Nice minting your nft'\n                );\n                setpendingNft(false);\n                dispatch(fetchData(blockchain.account));\n            });\n    };\n\n    const lessMintAmount = () => {\n        let newMintAmount = mintAmount - 1;\n        if (newMintAmount < 1) {\n            newMintAmount = 1;\n        }\n        setMintAmount(newMintAmount);\n    };\n\n    const moreMintAmount = () => {\n        let newMintAmount = mintAmount + 1;\n        if (newMintAmount > CONFIG.MAX_MINT_AMOUNT) {\n            newMintAmount = CONFIG.MAX_MINT_AMOUNT;\n        }\n        setMintAmount(newMintAmount);\n    };\n\n    const getData = () => {\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n            dispatch(fetchData(blockchain.account));\n        }\n    };\n\n    const getConfig = async () => {\n        const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n        });\n        const config = await configResponse.json();\n        SET_CONFIG(config);\n    };\n\n    // récupération de la configuration // config.json\n    useEffect(() => {\n        getConfig();\n    }, []);\n\n\n    // mise à jour des données en temps réel\n    useEffect(() => {\n        getData();\n    }, [blockchain.account]);\n\n    return (\n        <s.Screen>\n            <s.Container flex={1} style={{ padding: 1}}>\n                <s.Container flex={2} jc={\"center\"} ai={\"center\"} style={{backgroundColor: \"var(--accent)\", boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",}}>\n\n                    <div id=\"error\" style={{marginTop: \"-8rem\", marginBottom:\"10rem\"}}>\n                        {blockchain.errorMsg !== \"\" ? (\n                            <>\n                                <s.SpacerSmall />\n                                <s.TextDescription\n                                    style={{textAlign: \"center\", color: \"var(--accent-text)\",}}>\n                                    {blockchain.errorMsg}\n                                </s.TextDescription>\n                            </>\n                        ) : null}\n                    </div>\n\n                    <div style={{display: \"flex\",flexDirection: \"row\"}}>\n\n\n                    <div id=\"NftImage\" style={{display: \"inline-block\"}}>\n                            <img src={logo} alt=\"\" width=\"500\"/>\n                        </div>\n                        <div id=\"content\" style={{marginLeft:\"25rem\", padding: \"3rem\", borderRadius: \"15%\", width:\"28rem\", height:\"27rem\"}}>\n                            <s.TextTitle style={{textAlign: \"center\", fontSize: 50, fontWeight: \"bold\", color: \"var(--accent-text)\",}}>\n                                {CONFIG.MAX_SUPPLY - data.totalSupply} / {CONFIG.MAX_SUPPLY}\n                            </s.TextTitle>\n                            <s.TextDescription\n                                style={{textAlign: \"center\", color: \"var(--primary-text)\",}}>\n                            </s.TextDescription>\n                            <s.SpacerSmall />\n                            {Number(data.totalSupply)  >= CONFIG.MAX_SUPPLY ? (\n                                <>\n                                    <s.TextTitle style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}>\n                                        The sale has ended.\n                                    </s.TextTitle>\n                                    <s.TextDescription style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}>\n                                        You can still find {CONFIG.NFT_NAME} on\n                                    </s.TextDescription>\n                                    <s.SpacerSmall />\n                                </>\n                            ) : (\n                                <>\n                                    <s.TextTitle style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}>\n                                        1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                                        {CONFIG.NETWORK.SYMBOL}.\n                                    </s.TextTitle>\n                                    <s.SpacerXSmall />\n                                    <s.TextDescription style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}>\n                                        Excluding gas fees.\n                                    </s.TextDescription>\n                                    <s.SpacerSmall />\n                                    {blockchain.account === \"\" || blockchain.smartContract === null ? (\n                                        <s.Container ai={\"center\"} jc={\"center\"}>\n                                            <s.TextDescription\n                                                style={{textAlign: \"center\", color: \"var(--accent-text)\",}}>\n                                                Connect to the {CONFIG.NETWORK.NAME} network\n                                            </s.TextDescription>\n                                            <s.SpacerSmall />\n                                            <StyledButton\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    dispatch(connect());\n                                                    getData();\n                                                }}>\n                                                CONNECT\n                                            </StyledButton>\n\n\n\n                                        </s.Container>\n                                    ) : (\n                                        <>\n                                            <s.TextDescription\n                                                style={{textAlign: \"center\", color: \"var(--accent-text)\",}}>\n                                                {feedback}\n                                            </s.TextDescription>\n                                            <s.SpacerMedium />\n                                            <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                                <StyledRoundButton style={{ borderRadius: \"50% 50% 50% 50%\", marginRight:\"1rem\", marginTop:\"-1rem\"}} disabled={pendingNft ? 1 : 0} onClick={\n                                                    (e) => {\n                                                        e.preventDefault();\n                                                        lessMintAmount();\n                                                    }}>\n                                                    -\n                                                </StyledRoundButton>\n                                                <s.TextDescription\n                                                    style={{textAlign: \"center\", color: \"white\"}}>\n\n                                                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                                        <StyledButton\n                                                            disabled={pendingNft ? 1 : 0}\n                                                            onClick={(e) => {\n                                                                e.preventDefault();\n                                                                claimNFTs();\n                                                                getData();}}>\n                                                            {pendingNft ? \"Pending \" : \"Buy \"} {mintAmount}\n\n\n                                                        </StyledButton>\n                                                    </s.Container>\n                                                </s.TextDescription>\n                                                <StyledRoundButton style={{borderRadius: \"50% 50% 50% 50%\", marginLeft:\"1rem\", marginTop:\"-1rem\"}} disabled={pendingNft ? 1 : 0}\n                                                   onClick={(e) => {\n                                                        e.preventDefault();\n                                                        moreMintAmount();\n                                                }}>\n                                                    +\n                                                </StyledRoundButton>\n                                            </s.Container>\n                                            <s.SpacerSmall />\n\n\n\n\n                                        </>\n                                    )}\n                                </>\n                            )}\n                            <s.SpacerMedium />\n                        </div>\n                    </div>\n                    </s.Container>\n                <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n\n                </s.Container>\n            </s.Container>\n        </s.Screen>\n    );\n}\n\nexport default Mint;\n","import React from \"react\";\nimport { Button,Card ,Badge,Row} from 'react-bootstrap';\n\nexport default function RenderNftCard(props) {\n    console.log(props);\n    return (\n\n            <Card key={props.nft.edition} style={{ width: \"18rem\",backgroundColor:\"#141517\",border:\"1px solid #535353\", color:\"#929292\" }}>\n                <Card.Title className=\"m-auto\" style={{fontSize: \"1.6rem\"}}>{props.nft.name}</Card.Title>\n                <Card.Img variant=\"top\" src={props.nft.image} />\n                <Card.Body>\n                    <Card.Text style={{marginBottom:\"0.1rem\",color:\"#929292\"}}>Description</Card.Text>\n                    <Card.Text style={{}}>{props.nft.description}</Card.Text>\n                    <Card.Text style={{marginBottom:\"0.1rem\"}}>Attributes</Card.Text>\n                    {\n                        props.nft.attributes.map((attribute) =>\n\n                        <Badge bg={\"dark\"} style={{border: '1px solid darkgray',borderRadius: '5px!important',backgroundColor:\"brown\", margin:\"5px\", }}>\n                           <p style={{fontSize:\"10px\",marginBottom: \"0.1rem\",textAlign:\"left\",color:\"#b5b4b4\"}}> {attribute.trait_type} </p>\n                            <p style={{marginBottom: \"0rem\",color:\"#626262\"}}> {attribute.value}</p>\n                        </Badge>\n                        )\n                    }\n                    </Card.Body>\n            </Card>\n\n\n\n    );\n}\n","import React from 'react';\nimport {useState, useEffect } from 'react';\nimport {ethers} from \"ethers\";\nimport NFT from \"../artifacts/contracts/PirateTest.sol/PirateTest.json\";\nimport RenderNftCard from \"./elements/NftCard\";\nimport {Card, CardGroup, Row} from 'react-bootstrap';\nimport \"../styles/reset.css\";\n\nlet loaded = false;\nlet tableNFts = [];\nlet ShowButon = true;\n\nfunction Galery () {\n    console.log(\"galery\");\n\n    const [indexNFT,setIndexNFT] = useState([]);\n\n    const {REACT_APP_CONTRACT_ADD} = process.env;\n\n    const IpfsBaseJson = \"https://gateway.pinata.cloud/ipfs/Qmc6fwr3HvG3PPh4hY7daRDKyc73i1kqjovkoNCc4B7iBi/\";\n    const IpfsBaseImg = \"https://gateway.pinata.cloud/ipfs/Qme8pCBaZxgQdknbNZNniBVTMKpxqq4AXeLAgAVQnSDiU3/\";\n\n    const ContractAddress = '0xE36219270a636dC93E96C1cF12CA1c1a0AEf5a46';\n\n    async function getInfoNFT() {\n        loaded = true;\n        if(typeof window.ethereum !== 'undefined') {\n            let accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner();\n\n            //const balance = await provider.getBalance(accounts[0]);\n            console.log(ContractAddress);\n            const contract = new ethers.Contract(ContractAddress,NFT.abi,signer);\n            const idNfts = await contract.walletOfOwner(accounts[0]);\n            // loop for Id NFTs in wallet user\n           await idNfts.forEach(tx => {\n               fetch(IpfsBaseJson+tx+\".json\")\n                   .then(response => response.json())\n                   .then((jsonData) => {\n                       let test = new NftCard(jsonData.name,jsonData.description,jsonData.edition,IpfsBaseImg + tx + \".png\",jsonData.attributes);\n                       //tableNFts.push(String(IpfsBaseImg + tx + \".png\"));\n                       tableNFts.push(test);\n\n                       //setIndexNFT(test);\n                       setIndexNFT(String(tx));\n                       //console.log(test);\n                       //tableNFts.push(test);\n                       //console.log(jsonData.attributes);\n                   })\n                   .catch((error) => {\n                       // handle your errors here\n                       console.error(error)\n                   })\n\n            });\n        }\n    }\n\n\n     class NftCard {\n        constructor(name,description,edition,image,attributes) {\n            this.name = name;\n            this.description = description;\n            this.edition = edition;\n            this.image = image;\n            this.attributes = attributes;\n        }\n    }\n\n\n    function ButtonDisplayNft(props) {\n        return (\n\n\n            <button onClick={(e) => {\n                e.preventDefault();\n                getInfoNFT().then(r => console.log(\"then jsp\"));\n                ShowButon = false;\n            }}\n                    style={{\n                        padding: \"10px\",\n                        borderRadius: \" 50px\",\n                        border: \"1px solid var(--secondary-text)\",\n                        backgroundColor: \" var(--color-button)\",\n                        fontWeight: \"bold\",\n                        color: \"white\",\n                        width: \"200px\",\n                        cursor: \"pointer\"\n                    }}>\n                Display my NFT!\n            </button>\n        );\n    }\n\n\n    return (\n\n        <div id=\"galery\" style={{\n            backgroundColor: \"var(--primary)\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            width: \"100%\",\n            minHeight: \"94vh\",\n        }}>\n            <h3 style={{color:\"#929292\",textAlign:\"center\", fontFamily:\"PopinsBold\"}}>My Ship's company</h3>\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', marginTop:\"3rem\", marginBottom:\"1rem\"}}>\n                {ShowButon ?<ButtonDisplayNft /> : null}\n            </div>\n            <div id=\"tableNFT\">\n                <CardGroup style={{marginLeft: \"10rem\", paddingBottom : \"10rem\"}}>\n                    {\n                        tableNFts.map((nftCard) =>\n                            <Row xs={1} md={2} style={{marginLeft:\"0.5rem\",marginRight:\"0.5rem\",marginTop:\"0.5rem\",marginBottom:\"0.5rem\"}}>\n                                <RenderNftCard nft={nftCard}/>\n                            </Row>\n                        )\n                    }\n                </CardGroup>\n\n            </div>\n        </div>\n    )\n}\nexport default Galery;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport {Navbar,Container,Nav} from 'react-bootstrap';\nimport {BrowserRouter, Route, Routes} from 'react-router-dom';\nimport Mint from \"../src/pages/mint\";\nimport Galery from \"./pages/Galery\";\n\nfunction App() {\n\n  return (\n      <BrowserRouter>\n        <Navbar style={{paddingTop:\"0px\",paddingBottom:\"0px\", backgroundColor:\" var(--color-navBar)\"}}>\n          <Container style={{marginLeft: \"5px\"}}>\n            <Navbar.Brand href=\"/\" style={{color: \"white\",fontFamily:\"PiecesOfEight\", fontSize:\"30px\"}}>Treasure Hunt Game</Navbar.Brand>\n            <Navbar.Toggle />\n            <Navbar.Collapse className=\"justify-content-end\">\n              <Nav className=\"me-auto\">\n                <Nav.Link href=\"/galery\" style={{color: \"white\",marginLeft:\"2rem\",fontFamily:\"PopinsBold\",fontSize: \"20px\"}}>Ship's company</Nav.Link>\n\n              </Nav>\n\n              <Navbar.Text>\n\n              </Navbar.Text>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n        <div>\n          <div className=\"main-route-place\">\n            <Routes>\n              <Route path=\"/\" element={<Mint/>} />\n              <Route path=\"/galery\" element={<Galery/>} />\n\n            </Routes>\n          </div>\n\n        </div>\n\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}